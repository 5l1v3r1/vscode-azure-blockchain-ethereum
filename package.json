{
  "name": "azure-blockchain",
  "displayName": "Azure Blockchain Development Kit for Ethereum",
  "description": "Develop, deploy debug and manage your Azure Blockchain Service solution",
  "publisher": "AzBlockchain",
  "preview": true,
  "icon": "images/blockchain-service-logo.png",
  "version": "0.1.9",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-azure-blockchain-ethereum"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/vscode-azure-blockchain-ethereum/issues"
  },
  "homepage": "https://github.com/Microsoft/vscode-azure-blockchain-ethereum/blob/master/README.md",
  "license": "MIT",
  "engines": {
    "vscode": "^1.32.0"
  },
  "keywords": [
    "azure",
    "blockchain",
    "ethereum",
    "snippet"
  ],
  "categories": [
    "Azure",
    "Extension Packs",
    "Programming Languages"
  ],
  "aiKey": "INSERTAIKEY",
  "main": "./out/src/extension.js",
  "activationEvents": [
    "onView:AzureBlockchain",
    "onCommand:azureBlockchainService.showWelcomePage",
    "onCommand:azureBlockchainService.refresh",
    "onCommand:contract.copyByteCode",
    "onCommand:contract.copyABI",
    "onCommand:truffle.createLocalUI",
    "onCommand:truffle.newSolidityProject",
    "onCommand:truffle.buildContracts",
    "onCommand:truffle.deployContracts",
    "onCommand:azureBlockchainService.generateReportPublishingWorkflows",
    "onCommand:azureBlockchainService.generateMicroservicesWorkflows",
    "onCommand:azureBlockchainService.generateEventPublishingWorkflows",
    "onCommand:azureBlockchainService.generateDataPublishingWorkflows",
    "onCommand:azureBlockchainService.connectProject",
    "onCommand:azureBlockchainService.showSmartContractPage",
    "onCommand:azureBlockchainService.copyRPCEndpointAddress",
    "onCommand:azureBlockchainService.createProject",
    "onCommand:azureBlockchainService.disconnectProject",
    "onCommand:extension.truffle.debugTransaction",
    "onCommand:openZeppelin.addCategory",
    "onCommand:azureBlockchainService.signInToInfuraAccount",
    "onCommand:azureBlockchainService.signOutOfInfuraAccount",
    "onDebug"
  ],
  "contributes": {
    "commands": [
      {
        "command": "azureBlockchainService.generateMicroservicesWorkflows",
        "title": "Generate Microservices for Smart Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.generateDataPublishingWorkflows",
        "title": "Generate Data Publishing Workflows for Smart Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.generateReportPublishingWorkflows",
        "title": "Generate Report Publishing Workflows for Smart Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.generateEventPublishingWorkflows",
        "title": "Generate Event Publishing Workflows for Smart Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.showWelcomePage",
        "title": "Show Welcome Page",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.refresh",
        "title": "Refresh",
        "category": "Azure Blockchain",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "contract.copyByteCode",
        "title": "Copy Contract Bytecode",
        "category": "Azure Blockchain"
      },
      {
        "command": "contract.copyABI",
        "title": "Copy Contract ABI",
        "category": "Azure Blockchain"
      },
      {
        "command": "truffle.newSolidityProject",
        "title": "New Solidity Project",
        "category": "Azure Blockchain"
      },
      {
        "command": "truffle.buildContracts",
        "title": "Build Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "truffle.deployContracts",
        "title": "Deploy Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.connectProject",
        "title": "Connect to network",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.showSmartContractPage",
        "title": "Show Smart Contract Interaction Page",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.copyRPCEndpointAddress",
        "title": "Copy RPC Endpoint Address",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.createProject",
        "title": "Create a new network",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.disconnectProject",
        "title": "Disconnect",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.startGanacheServer",
        "title": "Start Ganache Server",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.stopGanacheServer",
        "title": "Stop Ganache Server",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.signInToInfuraAccount",
        "title": "Sign in to Infura account",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.signOutOfInfuraAccount",
        "title": "Sign out of Infura account",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.getPrivateKey",
        "title": "Retrieve private key",
        "category": "Azure Blockchain"
      },
      {
        "command": "extension.truffle.debugTransaction",
        "title": "Debug Transaction",
        "category": "Azure Blockchain"
      },
      {
        "command": "openZeppelin.addCategory",
        "title": "Add contracts from OpenZeppelin",
        "category": "Azure Blockchain"
      }
    ],
    "breakpoints": [
      {
        "language": "solidity"
      },
      {
        "language": "sol"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "when": "false",
          "command": "azureBlockchainService.showSmartContractPage"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.refresh"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.copyRPCEndpointAddress"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.disconnectProject"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateMicroservicesWorkflows"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateDataPublishingWorkflows"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateEventPublishingWorkflows"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateReportPublishingWorkflows"
        },
        {
          "when": "false",
          "command": "contract.copyByteCode"
        },
        {
          "when": "false",
          "command": "contract.copyABI"
        },
        {
          "when": "azureBlockchainService:isWorkspaceOpen",
          "command": "truffle.buildContracts"
        },
        {
          "when": "azureBlockchainService:isWorkspaceOpen",
          "command": "truffle.deployContracts"
        },
        {
          "when": "false",
          "command": "openZeppelin.addCategory"
        }
      ],
      "view/title": [
        {
          "command": "azureBlockchainService.showWelcomePage",
          "when": "view == AzureBlockchain"
        },
        {
          "command": "azureBlockchainService.createProject",
          "when": "view == AzureBlockchain"
        },
        {
          "command": "azureBlockchainService.connectProject",
          "when": "view == AzureBlockchain"
        },
        {
          "command": "azureBlockchainService.refresh",
          "when": "view == AzureBlockchain",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "azureBlockchainService.disconnectProject",
          "when": "view == AzureBlockchain && viewItem == project",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "azureBlockchainService.startGanacheServer",
          "when": "view == AzureBlockchain && viewItem == localproject",
          "group": "azureBlockchain-1@0"
        },
        {
          "command": "azureBlockchainService.stopGanacheServer",
          "when": "view == AzureBlockchain && viewItem == localproject",
          "group": "azureBlockchain-1@1"
        },
        {
          "command": "azureBlockchainService.disconnectProject",
          "when": "view == AzureBlockchain && viewItem == localproject",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "azureBlockchainService.copyRPCEndpointAddress",
          "when": "view == AzureBlockchain && viewItem == network",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "azureBlockchainService.copyRPCEndpointAddress",
          "when": "view == AzureBlockchain && viewItem == localnetwork",
          "group": "azureBlockchain-0@0"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == solidity",
          "command": "truffle.buildContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.showSmartContractPage",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "truffle.deployContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "truffle.deployContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "contract.copyByteCode",
          "group": "9_copyFromContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "contract.copyABI",
          "group": "9_copyFromContractGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateMicroservicesWorkflows",
          "group": "9_generationGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateDataPublishingWorkflows",
          "group": "9_generationGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateEventPublishingWorkflows",
          "group": "9_generationGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateReportPublishingWorkflows",
          "group": "9_generationGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "openZeppelin.addCategory",
          "group": "8_buildContractGroup"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "AzureBlockchain",
          "name": "Azure Blockchain"
        }
      ],
      "debug": [
        {
          "id": "InstructionView",
          "name": "Instructions"
        }
      ]
    },
    "debuggers": [
      {
        "type": "truffle",
        "label": "Truffle Debugger",
        "program": "./out/src/debugger.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [],
            "properties": {
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": true
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              },
              "txHash": {
                "type": "string",
                "description": "Transaction hash to debug",
                "default": "0x"
              },
              "files": {
                "type": "string[]",
                "description": "Array of file paths of solidity files to debug",
                "default": []
              },
              "workingDirectory": {
                "type": "string",
                "description": "Directory of truffle box",
                "default": "${workspaceFolder}"
              },
              "providerUrl": {
                "type": "string",
                "description": "URL of provider",
                "default": "http://127.0.0.1:8545"
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "truffle",
            "request": "launch",
            "name": "Debug Transaction with Truffle",
            "stopOnEntry": false,
            "txHash": "0x",
            "files": [],
            "workingDirectory": "${workspaceFolder}",
            "providerUrl": "http://127.0.0.1:8545"
          }
        ],
        "configurationSnippets": [
          {
            "label": "Truffle Debugger: Launch",
            "description": "Runs the Truffle debugger (truffle) and attaches to a TestRPC instance",
            "body": {
              "type": "truffle",
              "request": "launch",
              "name": "Debug Transaction with Truffle",
              "stopOnEntry": false,
              "txHash": "0x",
              "files": [],
              "workingDirectory": "^\"\\${workspaceFolder}/",
              "providerUrl": "http://127.0.0.1:8545"
            }
          }
        ],
        "variables": {}
      }
    ]
  },
  "scripts": {
    "package": "npx vsce package",
    "publish": "npx vsce publish",
    "vscode:prepublish": "npm i && npm run webpack:prod && cd ./drizzleUI && npm i && npm run build:ext",
    "compile": "npm run clean && tsc -p ./",
    "webpack:prod": "webpack --mode production",
    "watch": "tsc -watch -p ./",
    "tslint": "tslint -t verbose src/**/*.ts test/**/*.ts",
    "tslint:fix": "npm run tslint -- --fix",
    "version": "tsc -v",
    "test": "npm run compile && node ./out/test/runTest",
    "clean": "npx rimraf -- ./out/*"
  },
  "devDependencies": {
    "@machinomy/types-ethereumjs-wallet": "^0.0.12",
    "@types/astring": "^1.3.0",
    "@types/estree": "^0.0.39",
    "@types/download": "^6.2.4",
    "@types/fs-extra": "^7.0.0",
    "@types/glob": "^7.1.1",
    "@types/hdkey": "^0.7.0",
    "@types/istanbul": "^0.4.30",
    "@types/mocha": "^5.2.7",
    "@types/node": "^10.12.21",
    "@types/request": "^2.48.1",
    "@types/request-promise": "^4.1.44",
    "@types/rewire": "^2.5.28",
    "@types/semver": "^6.0.0",
    "@types/sinon": "^7.0.11",
    "@types/uuid": "^3.4.4",
    "@types/vscode": "^1.32.0",
    "copy-webpack-plugin": "^5.0.3",
    "decache": "^4.5.1",
    "glob": "^7.1.4",
    "husky": "^2.4.0",
    "istanbul": "^0.4.5",
    "lint-staged": "^8.2.0",
    "mocha": "^6.2.0",
    "remap-istanbul": "^0.13.0",
    "rewire": "^4.0.1",
    "sinon": "^7.3.2",
    "truffle": "^5.0.14",
    "ts-loader": "^6.0.2",
    "tslint": "^5.18.0",
    "tslint-microsoft-contrib": "^6.2.0",
    "typescript": "^3.3.1",
    "vscode-debugadapter": "^1.33.0",
    "vscode-debugprotocol": "^1.33.0",
    "vscode-test": "^1.2.0",
    "webpack": "^4.35.3",
    "webpack-cli": "^3.3.6"
  },
  "dependencies": {
    "abi-decoder": "^2.0.1",
    "acorn": "^6.1.1",
    "acorn-walk": "^6.1.1",
    "astring": "^1.4.0",
    "azure-arm-resource": "^7.3.0",
    "bip39": "^3.0.1",
    "download": "^7.1.0",
    "ethereumjs-wallet": "^0.6.3",
    "fs-extra": "^7.0.1",
    "hdkey": "^1.1.1",
    "ms-rest": "^2.5.0",
    "ms-rest-azure": "^2.6.0",
    "open": "^6.4.0",
    "request": "^2.88.0",
    "request-promise": "^4.2.4",
    "semver": "^6.0.0",
    "truffle-contract": "4.0.30",
    "truffle-debug-utils": "1.0.18",
    "truffle-debugger": "5.0.25",
    "truffle-provider": "0.1.15",
    "uuid": "^3.3.2",
    "vscode-azureextensionui": "^0.25.1",
    "vscode-extension-telemetry": "^0.1.1"
  },
  "extensionDependencies": [
    "JuanBlanco.solidity",
    "ms-vscode.azure-account"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run compile"
    }
  },
  "lint-staged": {
    "*.ts": [
      "npx tslint -t verbose",
      "git add"
    ]
  }
}
